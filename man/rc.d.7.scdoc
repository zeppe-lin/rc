RC.D(7)

# NAME

rc.d - directory for service control scripts

# SYNOPSIS

*/etc/rc.d/\**

# DESCRIPTION

The _/etc/rc.d_ directory contains shell scripts to start, stop,
restart or check system services.

Each script in this directory typically corresponds to a specific
service and is responsible for starting, stopping, and potentially
performing other actions on that service.

Scripts are usually named after the service they control (e.g., sshd,
dhcpcd, dbus).

Each script is called with a single argument specifying the action:

*start*
	Start the service.
*stop*
	Stop the service.
*restart*
	Stop and then start the service.
*status*
	Report whether the service is running.

Other common, but optional, actions include:

*reload*
	Reload the service configuration.
*force-reload*
	Force a configuration reload.
*configtest*
	Check the service configuration for errors.

Scripts are typically written in *sh*(1p) and use a *case* statement
to handle actions.
They often use *start-stop-daemon*(8) to manage processes.

Common variables defined in service scripts include:

*PROG*
	Path to the service executable.
*PID*
	Path to the PID file, usually in _/run_ or _/var/run_.
*SSD*
	Path to *start-stop-daemon*(8) utility (for brevity).
*OPTS*
	Command-line options for the service.

# FILES

_/etc/rc.d/_
	Directory containing service control scripts.

# EXAMPLES

Example of a simple service script:

```
#!/bin/sh
#
# /etc/rc.d/daemon: start/stop daemon(8) daemon
#

SSD=/sbin/start-stop-daemon
PROG=/usr/sbin/daemon
PID=/run/daemon.pid
OPTS="--some-opts"

case $1 in
start)
        $SSD --start --pidfile $PID --exec $PROG -- $OPTS
        ;;
stop)
        $SSD --stop --pidfile $PID --retry 10
        ;;
restart)
        $0 stop
        $0 start
        ;;
status)
        $SSD --status --pidfile $PID
        case $? in
        0) echo "$PROG is running with pid $(cat $PID)" ;;
        1) echo "$PROG is not running but the pid file $PID exists" ;;
        3) echo "$PROG is not running" ;;
        4) echo "Unable to determine the program status" ;;
        esac
*)
        echo "usage: $0 [start|stop|restart|status]"
        ;;
esac

# End of file.
```

# SEE ALSO

*sh*(1p),
*start-stop-daemon*(1),
*rc.conf*(5),
*rc*(8)

; vim: ft=scdoc cc=72 tw=70
